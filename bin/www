/*########### this is the config file for server and error handling ##########*/
var app = require('../app');// including app.js adding the middleware
var debug = require('debug')('admin:server');
var http = require('http');// for the server creation
/**
 * Get port from environment and store in Express.
 */
 var port = normalizePort(process.env.PORT || '3000');
 app.set('port',port);
/**
 * creating HTTP server
 */
 var server = http.createServer(app);
/**
* Listen on provided port, on all network interfaces.
*/
server.listen(port);
server.on('error',onError);
server.on('listening',onListening);
/**
* normalize a port into number , string or false
*/
function normalizePort(val){
	var port = parseInt(val,10);
	if(isNaN(port)){return val;}
	if(port >= 0){return port;}
	return false;
}
/**
*event listener for HTTP server for 'error' event
*/
function onError(error){
	if(error.syscall !== 'listen'){throw error;}
	var bind = typeof port === 'string'
	    ? 'Pipe ' + port
	    : 'Port ' + port;
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
    console.log('listening on port ' + port);
  	debug('Listening on ' + bind);
}
